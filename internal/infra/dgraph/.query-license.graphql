fragment LicenseFragment on License {
	id
	xid
	name
	text
	textHTML
	referenceURL
	detailsURL
	type
	isSpdx
	isDeprecated
	isOsiApproved
	isFsfLibre
	isBlocked
}

fragment LicenseFragmentBasic on License {
	id
	xid
	name
	isSpdx
	isDeprecated
	isOsiApproved
	isFsfLibre
	isBlocked
}

# ------------------------------------------------------------------------------

query GetLicenseByID($id: ID!) {
	getLicense(id: $id) {...LicenseFragment}
}

query GetLicenseByXid($xid: String!) {
	getLicense(xid: $xid) {...LicenseFragment}
}

query GetLicenseID($xid: String!) {
	getLicense(xid: $xid) {id}
}

query GetLicenses($getFilter: LicenseFilter, $order: LicenseOrder, $first: Int, $offset: Int) {
	queryLicense(filter: $getFilter, order: $order, first: $first, offset: $offset) {...LicenseFragment}
	aggregateLicense(filter: $getFilter) {count}
}

query GetAllLicensesBasic() {
	queryLicense {...LicenseFragmentBasic}
}

mutation CreateLicenses($createInput: [AddLicenseInput!]!) {
	addLicense(input: $createInput, upsert: true) {license {id}}
}

mutation UpdateLicenses($updateInput: UpdateLicenseInput!) {
	updateLicense(input: $updateInput) {license {id}}
}

mutation DeleteLicenses($delFilter: LicenseFilter!) {
	deleteLicense(filter: $delFilter) {license {id}}
}
