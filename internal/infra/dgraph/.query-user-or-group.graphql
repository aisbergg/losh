fragment UserOrGroupFragment on UserOrGroup {
	__typename
	id
	xid
	host {
		id
		name
	}
	name
	fullName
	email
	avatar {
		id
		path
	}
	url
	memberOf {
		id
		fullName
	}
	products {
		id
		name
	}
}

fragment UserOrGroupBasicFragment on UserOrGroup {
	__typename
	name
	fullName
	id
}

fragment UserFragment on User {
	...UserOrGroupFragment
	locale
}

fragment GroupFragment on Group {
	...UserOrGroupFragment
	members {
		__typename
		id
	}
}

fragment UserOrGroupFullFragment on UserOrGroup {
	__typename
	... on User {...UserFragment}
	... on Group {...GroupFragment}
}


# ------------------------------------------------------------------------------

query GetUserOrGroupByID($id: ID!) {
	getUserOrGroup(id: $id) {
		... on User {...UserFragment}
		... on Group {...GroupFragment}
	}
}

query GetUserOrGroupByXid($xid: String!) {
	getUserOrGroup(xid: $xid) {
		... on User {...UserFragment}
		... on Group {...GroupFragment}
	}
}

query GetUserOrGroupID($xid: String!) {
	getUserOrGroup(xid: $xid) {id}
}

query GetUserOrGroups($getFilter: UserOrGroupFilter, $order: UserOrGroupOrder, $first: Int, $offset: Int) {
	queryUserOrGroup(filter: $getFilter, order: $order, first: $first, offset: $offset) {
		... on User {
			...UserFragment
		}
		... on Group {
			...GroupFragment
		}
	}
	aggregateUserOrGroup(filter: $getFilter) {count}
}

mutation UpdateUserOrGroups($updateInput: UpdateUserOrGroupInput!) {
	updateUserOrGroup(input: $updateInput) {userOrGroup {id}}
}

mutation DeleteUserOrGroups($delFilter: UserOrGroupFilter!) {
	deleteUserOrGroup(filter: $delFilter) {userOrGroup {id}}
}

query GetUserByID($id: ID!) {
	getUser(id: $id) {...UserFragment}
}

query GetUserByXid($xid: String!) {
	getUser(xid: $xid) {...UserFragment}
}

query GetUserID($xid: String!) {
	getUser(xid: $xid) {id}
}

query GetUsers($getFilter: UserFilter, $order: UserOrder, $first: Int, $offset: Int) {
	queryUser(filter: $getFilter, order: $order, first: $first, offset: $offset) {...UserFragment}
	aggregateUser(filter: $getFilter) {count}
}

mutation CreateUsers($createInput: [AddUserInput!]!) {
	addUser(input: $createInput, upsert: true) {user {id}}
}

mutation UpdateUsers($updateInput: UpdateUserInput!) {
	updateUser(input: $updateInput) {user {id}}
}

mutation DeleteUsers($delFilter: UserFilter!) {
	deleteUser(filter: $delFilter) {user {id}}
}

query GetGroupByID($id: ID!) {
	getGroup(id: $id) {...GroupFragment}
}

query GetGroupByXid($xid: String!) {
	getGroup(xid: $xid) {...GroupFragment}
}

query GetGroupID($xid: String!) {
	getGroup(xid: $xid) {id}
}

query GetGroups($getFilter: GroupFilter, $order: GroupOrder, $first: Int, $offset: Int) {
	queryGroup(filter: $getFilter, order: $order, first: $first, offset: $offset) {...GroupFragment}
	aggregateGroup(filter: $getFilter) {count}
}

mutation CreateGroups($createInput: [AddGroupInput!]!) {
	addGroup(input: $createInput, upsert: true) {group {id}}
}

mutation UpdateGroups($updateInput: UpdateGroupInput!) {
	updateGroup(input: $updateInput) {group {id}}
}

mutation DeleteGroups($delFilter: GroupFilter!) {
	deleteGroup(filter: $delFilter) {group {id}}
}
